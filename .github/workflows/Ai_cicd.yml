on:
  pull_request:
    types: [opened, synchronize]

# 添加這個權限區塊
permissions:
  contents: read
  pull-requests: write  # 這使工作流程可以評論和編輯 PR

jobs:
  ai_test_suggestion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"  # 可依需求調整 Python 版本
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai pyyaml requests

      - name: Get PR Details
        id: pr_details
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          gh pr view $pr_number
          
          # 使用唯一的分隔符處理多行環境變量
          echo "PR_TITLE<<EOF" >> $GITHUB_ENV
          gh pr view $pr_number --json title -q .title >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          gh pr view $pr_number --json body -q .body >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update PR with Default BASE_URL
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_BODY: ${{ env.PR_BODY }}
        run: python .github/scripts/update_base_url.py

      - name: Run AI Analysis
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_BODY: ${{ env.PR_BODY }}
        run: python .github/scripts/Ai_run.py

      - name: Comment on PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ai_suggestions.txt)"
        
      - name: Update PR description with TEST_RANGE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f "test_range.txt" ]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
            TEST_RANGE=$(cat test_range.txt)
            
            # 獲取當前 PR 描述
            CURRENT_BODY=$(gh pr view $PR_NUMBER --json body -q .body)
            
            # 創建臨時文件以避免 YAML 語法問題
            if [[ "$CURRENT_BODY" == *"TEST_RANGE:"* ]]; then
              # 存在則替換
              echo "$CURRENT_BODY" | sed "s/TEST_RANGE:.*$/TEST_RANGE: $TEST_RANGE/" > new_body.txt
            else
              # 不存在則添加
              if [ -z "$CURRENT_BODY" ]; then
                echo "TEST_RANGE: $TEST_RANGE" > new_body.txt
              else
                echo "$CURRENT_BODY" > new_body.txt
                echo "" >> new_body.txt
                echo "TEST_RANGE: $TEST_RANGE" >> new_body.txt
              fi
            fi
            
            # 更新 PR 描述
            gh pr edit $PR_NUMBER --body-file new_body.txt
          else
            echo "找不到 test_range.txt 文件"
          fi