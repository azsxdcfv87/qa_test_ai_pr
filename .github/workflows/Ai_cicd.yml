on:
  pull_request:
    types: [opened, synchronize]

# 添加這個權限區塊
permissions:
  contents: read
  pull-requests: write  # 這使工作流程可以評論 PR

jobs:
  ai_test_suggestion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # 可依需求調整 Python 版本
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai pyyaml requests
          
      - name: Get PR Details
        id: pr_details
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "PR_TITLE=$(gh pr view ${{ github.event.pull_request.number }} --json title -q .title)" >> $GITHUB_ENV
          echo "PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body -q .body)" >> $GITHUB_ENV
      
      - name: Create script directory and data directory
        run: |
          mkdir -p .github/scripts
          mkdir -p .github/data
      
      - name: Create test tags file
        run: |
          cat > .github/data/test_tags.yaml << 'EOF'
          tags:
            - livestream
            - settings
            - following
            - login
            - register
            - profile
            - notification
            - search
            - feed
            - comment
            - upload
            - dashboard
            - payment
            - subscription
            - messaging
          EOF
      
      - name: Create AI script
        run: |
          cat > .github/scripts/Ai_run.py << 'EOF'
          import os
          import sys
          import yaml
          import google.generativeai as genai

          # 讀取環境變數
          api_key = os.getenv("GOOGLE_API_KEY")
          pr_title = os.getenv("PR_TITLE", "")
          pr_body = os.getenv("PR_BODY", "")

          if not api_key:
              raise ValueError("API Key 未設定，請檢查 GitHub Secrets")

          # 讀取測試標籤 YAML 檔案
          try:
              with open('.github/data/test_tags.yaml', 'r') as file:
                  tags_data = yaml.safe_load(file)
              # 將標籤列表轉換為逗號分隔的字符串
              available_tags = ", ".join(tags_data.get('tags', []))
          except Exception as e:
              print(f"讀取標籤檔案時發生錯誤: {e}")
              available_tags = "livestream, settings, following, login, register"  # 預設標籤，以防檔案讀取失敗

          # 初始化 Google GenAI 客戶端
          genai.configure(api_key=api_key)

          # 生成 AI 分析內容
          prompt = f"""
          你是一位專業的軟體測試專家，請根據以下 PR 標題和描述，以及測試提供的現有 Tags，提供符合內容的自動化測試Tags，並寫成 TEST_RANGE：login, register ...etc

          PR 標題: {pr_title}
          PR 內文: {pr_body}

          可用的測試 Tags: {available_tags}
          """

          try:
              # 使用 gemini-2.0-flash 模型生成內容
              model = genai.GenerativeModel(model_name="gemini-2.0-flash")
              response = model.generate_content(
                  prompt,
                  generation_config=genai.GenerationConfig(
                      temperature=0.2,
                      top_p=0.7,
                      max_output_tokens=1024
                  )
              )
              
              # 擷取 AI 建議
              suggestions = response.text
              
              # 儲存到檔案
              with open("ai_suggestions.txt", "w", encoding="utf-8") as f:
                  f.write(f"🚀 **AI 測試建議**\n{suggestions}")
              
          except Exception as e:
              print(f"生成內容時發生錯誤: {e}")
              sys.exit(1)
          EOF
          
      - name: Run AI Analysis
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: python .github/scripts/Ai_run.py
        
      - name: Comment on PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ai_suggestions.txt)"